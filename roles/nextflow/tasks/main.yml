---
    - name: Create nextflow home
      file:
        path: "{{lm_prefix}}/opt/nextflow"
        state: directory

    - name: Checking custom version
      debug:
          msg: "IMPORTANT NOTE: Custom versioning is NOT supported with Nextflow"
      when: version == "custom"

    - name: Install Nextflow
      shell: curl -fsSL https://get.nextflow.io | bash
      args:
        chdir: "{{lm_prefix}}/bin" #this is where the nextflow binary will be written
        warn: false
      environment:
        NXF_HOME: "{{lm_prefix}}/opt/nextflow"

    - name: Nextflow test and version extraction
      include_role:
          name: lamachine-run
      vars:
        command: "nextflow -version | grep --colour=never version | sed 's/\\s*version\\s//'"

    - name: Register Nextflow #this is third-party and doesn't have a codemeta.json, so we just take care of everything right here:
      include_role:
         name: lamachine-register
      vars:
         metadata:
           identifier: nextflow
           name: Nextflow
           version: "{{ lamachine_run.stdout }}"
           description: "Nextflow enables scalable and reproducible scientific workflows using software containers. It allows the adaptation of pipelines written in the most common scripting languages. Its fluent DSL simplifies the implementation and the deployment of complex parallel and reactive workflows on clouds and clusters."
           author: [ "Paolo Di Tommaso", "Maria Chatzou", "Evan W Floden", "Pablo Prieto Barja", "Emilio Palumbo", "Cedric Notredame" ]
           url: "https://www.nextflow.io"
           codeRepository: "https://github.com/nextflow-io/nextflow"
           producer:
             "@type": Organization,
             name: "Center for Genomic Regulation"
             location: "Barcelona"
           license: GPLv3
           programmingLanguage:
             "@type": ComputerLanguage
             identifier: groovy
             name: Groovy

    - name: Create nextflow tmp directory
      file:
          path: "{{lm_prefix}}/opt/nextflow/tmp"
          mode: u+rwx,g+rwsx,a+rx
          state: directory

    - name: Create nextflow plugins directory
      file:
          path: "{{lm_prefix}}/opt/nextflow/plugins"
          mode: u+rwx,g+rx,a+rx
          state: directory

    - name: Ensure nextflow script permissions are sane
      shell: |
        chmod a+rx {{lm_prefix}}/bin/nextflow
        find {{ lm_prefix }}/opt/nextflow -type f | xargs chmod 0644
        find {{ lm_prefix }}/opt/nextflow -type d | xargs chmod 0755
        find {{ lm_prefix }}/opt/nextflow/tmp -type d | xargs chmod a+rwx #possible low-risk security hole
        find {{ lm_prefix }}/opt/nextflow/tmp -type d | xargs chmod g+rwsx #possible low-risk security hole
        find {{ lm_prefix }}/opt/nextflow/tmp -type f | xargs chmod a+rw #possible low-risk security hole
      ignore_errors: yes #might fail

    - name: "Adding activation script for Nextflow"
      become: "{{lm_become}}"
      become_user: root
      copy:
        dest: "{{lm_prefix}}/bin/activate.d/nextflow.sh"
        content: |
          export NXF_HOME={{lm_prefix}}/opt/nextflow
        mode: u+rwx,a+rx
