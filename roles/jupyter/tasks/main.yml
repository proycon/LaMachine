---
  - name: "Installing JupyterHub"
    include_role:
        name: lamachine-python-install
    vars:
      package:
        pip: jupyterhub


  - name: "Installing JupyterLab"
    include_role:
        name: lamachine-python-install
    vars:
      package:
        pip: jupyterlab

    #https://github.com/jupyterhub/oauthenticator/
  - name: "Installing OAuthenticator"
    include_role:
        name: lamachine-python-install
    vars:
      package:
        pip: oauthenticator

  - name: "Installing Ipywidgets"
    include_role:
        name: lamachine-python-install
    vars:
      package:
        pip: ipywidgets

  - name: Ensure npm package-lock.json is writable if it exists
    become: "{{lm_become}}"
    become_user: root
    file:
      path: "{{lm_prefix}}/package-lock.json"
      mode: u+rwx,a+rx
      state: file
      owner: "{{unix_user}}"
      group: "{{unix_group}}"
    ignore_errors: "yes"

  - name: Ensure npm package.json is writable if it exists
    become: "{{lm_become}}"
    become_user: root
    file:
      path: "{{lm_prefix}}/package.json"
      mode: u+rwx,a+rx
      state: file
      owner: "{{unix_user}}"
      group: "{{unix_group}}"
    ignore_errors: "yes"

  - name: Installing configurable-http-proxy
    include_role:
      name: lamachine-run
    vars:
      command: npm install --prefix {{lm_prefix}} configurable-http-proxy

  - name: "Installing Sudospawner"
    include_role:
        name: lamachine-python-install
    vars:
      package:
        pip: sudospawner

 #- name: "Installing JupyterLab Git Extension"
 #  include_role:
 #      name: lamachine-python-install
 #  vars:
 #    package:
 #      pip: jupyterlab_git

  - name: Create directory for notebooks
    file:
      path: "{{lm_prefix}}/var/notebooks"
      mode: u+rwx,a+rx
      state: directory
      owner: "{{unix_user}}"
      group: "{{unix_group}}"

  - name: Create configuration directory for notebooks
    become: "{{lm_become}}"
    become_user: root
    file:
        path: "{{ lm_prefix }}/etc/jupyter"
        state: directory
        owner: "{{unix_user}}"
        group: "{{unix_group}}"
        mode: u+rwx,g+rwsx,a+rx

  - name: "Link to shared data directory from notebook path"
    file:
      src: "{{data_path}}"
      dest: "{{lm_prefix}}/var/notebooks/shared_data"
      state: link

  - name: Install webserver configuration for JupyterHub
    become: "{{lm_become}}"
    become_user: root
    template:
      src: "nginx/jupyter.conf"
      dest: "{{lm_prefix}}/etc/nginx/conf.d/jupyter.conf"
      force: yes
      owner: "{{unix_user}}"
      group: "{{unix_group}}"
    when: webservertype == "nginx"

  - name: Install JupyterHub configuration
    become: "{{lm_become}}"
    become_user: root
    template:
      src: "jupyterhub_config.py"
      dest: "{{lm_prefix}}/etc/jupyterhub_config.py"
      force: yes
      owner: "{{unix_user}}"
      group: "{{unix_group}}"

  - name: Install Jupyter Notebook configuration
    become: "{{lm_become}}"
    become_user: root
    template:
      src: "jupyter_notebook_config.py"
      dest: "{{lm_prefix}}/etc/jupyter/jupyter_notebook_config.py"
      force: yes
      owner: "{{unix_user}}"
      group: "{{unix_group}}"


  - name: Link to Jupyter Notebook configuration
    become: "{{lm_become}}"
    become_user: root
    file:
      src: "{{lm_prefix}}/jupyter"
      dest: "/etc/jupyter"
      state: link
    when: locality == "global" and root
    ignore_errors: yes

  #- name: Install JupyterLab configuration
  #  become: "{{lm_become}}"
  #  become_user: root
  #  template:
  #    src: "jupyter_notebook_config.py"
  #    dest: "{{lm_prefix}}/etc/jupyter_notebook_config.py"
  #    force: yes
  #    owner: "{{unix_user}}"
  #    group: "{{unix_group}}"

  - name: Install systemd service for JupyterHub
    become: "{{lm_become}}"
    become_user: root
    template:
      src: "jupyter.service"
      dest: "/lib/systemd/system/jupyter.service"
      force: yes
      owner: "{{unix_user}}"
      group: "{{unix_group}}"
    when: locality == "global" and root
    ignore_errors: yes

  - name: Enable systemd service for JupyterHub
    become: "{{lm_become}}"
    become_user: root
    shell: |
      systemctl enable jupyter
      systemctl start jupyter
    when: locality == "global" and root
    ignore_errors: yes

  - name: Register Jupyter Hub metadata
    include_role:
        name: lamachine-register
    vars:
      update: "jupyterhub"
      metadata: #add entrypoint metadata to registry
          identifier: "jupyterhub"
          name: "Jupyterhub"
          description: "JupyterHub and JupyterLab form an interactive development environment for working with notebooks, code (e.g. Python, R) and data. Additionally, JupyterLab enables you to use text editors, terminals, data file viewers, and other custom components side by side with notebooks in a tabbed work area. This JupyterHub installation in LaMachine offers you access to all installed libraries and files and as-such offers a powerful but user friendly way for data scientists to use LaMachine from the browser."
          keywords: ["lab","IDE","python","notebook","scripting environment"]
          entryPoints:
            - "@type": "EntryPoint"
              urlTemplate: "{{lm_base_url}}/jupyter"
              interfaceType: "WUI"

